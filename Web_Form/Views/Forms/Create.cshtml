@model FullFormViewModel
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = "Create";
}
@{
    var user = UserManager.GetUserAsync(User).Result;
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow-lg rounded-lg">

                <form method="post" asp-controller="forms" asp-action="Create" id="mainForm" class="p-4">

                    <input hidden asp-for="TblForm.Createdby" value="@user.Name" />
                    <input hidden asp-for="TblForm.UserId" value="@user.Id" />
                    <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                        <h4>Create New Template</h4>
                        <button type="submit" class="btn btn-success btn-lg" id="Submit">
                            <i class="fa-solid fa-paper-plane me-2"></i>Submit
                        </button>
                    </div>
                    <div class="card-body">

                        <!-- Title Section -->
                        <div class="title mb-4">
                            <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                            <!-- Title Input -->
                            <div class="form-floating mb-4">
                                <input asp-for="TblForm.Title" class="form-control" placeholder="Enter Title" id="title" />
                                <label asp-for="TblForm.Title" for="title">
                                    <i class="fa-solid fa-heading me-2"></i>Title
                                </label>
                                <span asp-validation-for="TblForm.Title" class="text-danger"></span>
                            </div>

                            <!-- Description Input -->
                            <div class="form-floating mb-4">
                                <textarea asp-for="TblForm.Description" class="form-control" placeholder="Enter Description" style="height: 120px;" id="description"></textarea>
                                <label asp-for="TblForm.Description" for="description">
                                    <i class="fa-solid fa-align-left me-2"></i>Description
                                </label>
                                <span asp-validation-for="TblForm.Description" class="text-danger"></span>
                            </div>

                        </div>


                        <!-- Question Section -->
                        <div class="table-responsive " id="questionDetails">
                            @*  @await Html.PartialAsync($"~/Views/forms/AddQuestion.cshtml", Model) *@
                        </div>

                    </div>
                    <div id="Question" class="mb-4">
                        <div class="form-floating mb-4">
                            <input asp-for="TblQuestion.Question" class="form-control" placeholder="Enter Question" id="TblQuestion_Question" />
                            <label asp-for="TblQuestion.Question" for="TblQuestion_Question">
                                <i class="fa-solid fa-question-circle me-2"></i>Question
                            </label>
                            <span asp-validation-for="TblQuestion.Question" class="text-danger"></span>
                        </div>

                        <div class="form-floating mb-4">
                            <select asp-for="TblQuestion.QuestionType" class="form-control" aria-label="Select Question Type" id="TblQuestion_QuestionType" onchange="showOptionAddButton()">
                                <option value="">-- Select Question Type --</option>
                                @foreach (var type in Model.QuestionType)
                                {
                                    <option value="@type.KeywordId">@type.KeywordName</option>
                                }

                            </select>
                            <label for="TblQuestion_QuestionType">
                                <i class="fa-solid fa-cogs me-2"></i>Question Type
                            </label>
                            <span asp-validation-for="TblQuestion.QuestionType" class="text-danger"></span>
                        </div>

                        <div id="Option" class="form-floating mb-4">

                            <div class="table-responsive " id="optionList">
                                @await Html.PartialAsync($"~/Views/forms/AddOption.cshtml", Model)
                            </div>
                            <div>
                                <label asp-for="tblQuestionOption.OptionText" for="questionText">
                                    <i class="fa-solid fa-question-circle me-2"></i>Option
                                </label>
                                <input asp-for="tblQuestionOption.OptionText" class="form-control" placeholder="Enter Question" id="questionText" />

                                <span asp-validation-for="tblQuestionOption.OptionText" class="text-danger"></span>

                                <div class="d-flex justify-content-end">
                                    <button id="AddOption" type="button" class="btn btn-light mt-2 btn-sm" title="Add New Option">
                                        <i class="fa-solid fa-plus fa-lg"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="d-flex justify-content-end">
                            <button id="AddSection" type="button" class="btn btn-light btn-sm" title="Add New Section">
                                <i class="fa-solid fa-plus fa-lg"></i> Add Section
                            </button>
                        </div>
                    </div>
                    <div class="form-floating mb-4">
                        <select asp-for="TblForm.IsPublic" id="visibility" class="form-control" aria-label="Select Visibility">
                            <option value="true">Public</option>
                            <option value="false">Private</option>
                        </select>
                        <label asp-for="TblForm.IsPublic">
                            <i class="fa-solid fa-eye me-2"></i>Visibility
                        </label>
                    </div>

                    <div id="privateDetails" class="mt-4" style="display: none;">
                        <!-- This will hold the partial view content -->
                    </div>

                </form>

            </div>
        </div>
    </div>

    <!-- Back Button -->
    <div class="text-center mt-3">
        <a asp-action="Index" class="btn btn-outline-secondary">
            <i class="fa-solid fa-arrow-left me-2"></i>Back to List
        </a>
    </div>
</div>

@section Scripts {
    <script type="text/javascript" asp-append-version="true">
        // Clear server-side session when the page is being unloaded
        window.onbeforeunload = function () {
            $.ajax({
                async: false, // Ensure request completes before page unloads
                cache: false,
                url: '/Forms/ClearSession', // Endpoint to clear the server-side session
                type: 'POST',
                success: function () {
                    console.log("Server-side session cleared.");
                },
                error: function (xhr, status, error) {
                    console.error("Error clearing server-side session: " + error);
                }
            });
        };
        function showOptionAddButton() {
            if ($('#TblQuestion_QuestionType').val() == 3) {
                $("#Option").show();
            }
            else {
                $("#Option").hide();
            }

        }
        $(document).ready(function () {

            $("#Submit").on("click", function (e) {
                e.preventDefault(); // Prevent default form submission
                $("#Submit").prop('disabled', true); // Disable the submit button to prevent multiple clicks

                $.ajax({
                    async: true,
                    cache: false,
                    url: '/Forms/Create',
                    type: 'POST',
                    data: $("#mainForm").serialize(),
                    success: function (response) {
                        console.log("Form submitted successfully");
                        // Optionally redirect or display a success message
                        window.location.href = '/Forms/Index';  // Redirect after success
                    },
                    error: function (xhr, status, error) {
                        console.error("Error: " + error);
                        $("#Submit").prop('disabled', false); // Re-enable button on error
                    }
                });
            });
        });

        function ResetAddOption() {
            $.ajax({
                async: true,
                cache: false,
                url: '/Forms/AddOptionReset',
                type: 'POST',
                data: $("#mainForm").serialize(),
                success: function (response) {
                    // console.log(response);
                    $('#optionList').html(response);
                },
                error: function (xhr, status, error) {
                    alert("An error occurred: " + xhr.responseText);
                    console.error(error);
                }
            });
        }
        $(document).ready(function () {
            ResetAddOption();
            $("#AddSection").on("click", function () {
                console.log($("#mainForm").serialize());
                $.ajax({
                    async: true,
                    cache: false,
                    url: '/Forms/AddQuestion',
                    type: 'POST',
                    data: $("#mainForm").serialize(),
                    success: function (response) {
                        // console.log(response);
                        $('#questionDetails').html(response);
                        ResetAddOption();
                    },
                    error: function (xhr, status, error) {
                        alert("An error occurred: " + xhr.responseText);
                        console.error(error);
                    }
                });
            });
            $("#AddOption").on("click", function () {
                $.ajax({
                    async: true,
                    cache: false,
                    url: '/Forms/AddOption',
                    type: 'POST',
                    data: $("#mainForm").serialize(),
                    success: function (response) {
                        // console.log(response);
                        $('#optionList').html(response);
                    },
                    error: function (xhr, status, error) {
                        alert("An error occurred: " + xhr.responseText);
                        console.error(error);
                    }
                });
            });
        });
        $(document).ready(function () {
            // Monitor changes to the visibility dropdown
            $('#visibility').on('change', function () {
                const selectedValue = $(this).val();

                if (selectedValue === 'Private') {
                    // Show the private details partial view
                    $.ajax({
                        url: '/Forms/PrivateDetailsPartial', // Adjust the URL to your endpoint
                        type: 'GET',
                        success: function (response) {
                            $('#privateDetails').html(response).show();
                        },
                        error: function (xhr, status, error) {
                            console.error("Error loading private details: " + error);
                        }
                    });
                } else {
                    // Hide the private details section
                    $('#privateDetails').hide().empty();
                }
            });
        });

    </script>
}